{"version":3,"sources":["webpack://SaiStyleColorPicker/webpack/universalModuleDefinition","webpack://SaiStyleColorPicker/webpack/bootstrap","webpack://SaiStyleColorPicker/./src/lib/SaiStyleColorPicker.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","SaiStyleColorPicker","el","config","this","subscriptions","defaultConfig","size","thickness","startAngle","backgroundColor","borderColor","initColor","inlineStyle","matteBorderWidth","realBorderWidth","realBorderOffset","innerBorderGapRadian","Math","PI","wheelPanelOptions","colorControl","Color","centerPoint","x","y","posControl","innerRadius","outerRadius","middleRadius","squareSize","eventControl","mousemove","__assign","init","getColor","type","red","g","green","b","blue","h","hue","saturation","v","lightness","_b","_a","hsv2hsl","round","toFixed","toColorString","_c","rgb2hex","setColor","color","trim","charAt","_j","hex2rgb","rgb2hsl","hsl2hsv","includes","valueString","exec","replace","split","map","item","_d","_e","_f","Error","_g","_h","refreshByHSV","refreshColorDisplay","on","event","fn","push","off","eventSubscriptions","index","indexOf","splice","emit","args","_i","arguments","length","apply","genElements","bindEvents","fragment","document","createDocumentFragment","frameCanvas","createFrameCanvas","pickingAreaContainerStyle","width","height","padding","background","toDataURL","colorPicker","createElement","className","pickingArea","huePicker","pickingAreaContainer","setStyleCombined","pickerStyle","position","margin","borderWidth","borderStyle","borderRadius","boxSizing","setupPickingAreaGradient","appendChild","styleObject","elStyle","style","keys","forEach","backgroundImage","_this","addEventListener","e","pointX","clientX","pageXOffset","pointY","clientY","pageYOffset","triggerDown","preventDefault","rect","getBoundingClientRect","left","right","top","bottom","dx","dy","distance","sqrt","squarePointX","squarePointY","triggerMoveForHue","startWatchMove","triggerMoveForColor","genMoveHandler","triggerFn","currentMoveHandler","handleMouseup","removeEventListener","validateWithEdge","min","max","squareZeroX","squareZeroY","percentX","percentY","targetColor","rad2deg","atan2","hueColor","pickerColorHue","huePhi","huePickerX","cos","huePickerY","sin","huePickerColor","colorPickerX","colorPickerY","colorPickerColorSaturation","colorPickerColorValue","colorPickerColor","ctx","getContext","drawHueWheel","image","createImageData","data","radius","centerX","centerY","rowLength","xy2polar","phi","deg","hsv2rgb","putImageData","lineWidth","strokeStyle","beginPath","arc","stroke","radCollection","closePath","r1","g1","b1","chroma","hue1","abs","cmin","cmax","delta","hex","result","parseInt","toString","rad","__webpack_exports__"],"mappings":"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","file":"sai-style-color-picker.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SaiStyleColorPicker\"] = factory();\n\telse\n\t\troot[\"SaiStyleColorPicker\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\r\nimport \"./picker.less\";\r\n\r\n/*------------------------------------------------------------------------*\\\r\n\r\n  # classes\r\n\r\n\\*------------------------------------------------------------------------*/\r\n\r\nclass SaiStyleColorPicker {\r\n\r\n    // mini pub/sub\r\n    private subscriptions: any = {};\r\n\r\n    // config (options)\r\n    private defaultConfig = {\r\n\r\n        // [public] designed for modification\r\n        size: 207,\r\n        thickness: 21,\r\n        startAngle: 330,\r\n        backgroundColor: \"#fff\",\r\n        borderColor: \"#acacac\",\r\n        initColor: \"#fff\",\r\n        inlineStyle: true,\r\n\r\n        // [reserved] modified not recommended\r\n        matteBorderWidth: 2,\r\n        realBorderWidth: 1,\r\n        realBorderOffset: 1,\r\n        innerBorderGapRadian: Math.PI / 180\r\n    };\r\n    private wheelPanelOptions: any = {};\r\n\r\n    // control variables\r\n    private colorControl: Color = new Color(0, 0, 1);\r\n    private centerPoint: any = {\r\n        x: 0,\r\n        y: 0\r\n    };\r\n    private posControl: any = {\r\n        innerRadius: 0,\r\n        outerRadius: 0,\r\n        middleRadius: 0,\r\n        squareSize: 0\r\n    };\r\n    private eventControl: any = {\r\n        mousemove: false\r\n    };\r\n\r\n    // dom elements\r\n    private el: HTMLElement;\r\n    private pickingAreaContainer: HTMLElement;\r\n    private pickingArea: HTMLElement;\r\n    private huePicker: HTMLElement;\r\n    private colorPicker: HTMLElement;\r\n\r\n    public constructor(el: HTMLElement, config: Object = {}) {\r\n        this.wheelPanelOptions = {...this.defaultConfig, ...config};\r\n        this.el = el;\r\n        this.init();\r\n    }\r\n\r\n    public getColor(type?: String) {\r\n        \r\n        switch (type) {\r\n\r\n            case \"object:rgb\": {\r\n                return {\r\n                    r: this.colorControl.red,\r\n                    g: this.colorControl.green,\r\n                    b: this.colorControl.blue\r\n                }\r\n            }\r\n\r\n            case \"object:hsv\": {\r\n                return {\r\n                    h: this.colorControl.hue,\r\n                    s: this.colorControl.saturation,\r\n                    v: this.colorControl.value\r\n                }\r\n            }\r\n\r\n            case \"hsl\": {\r\n                let {hue, saturation, value} = this.colorControl;\r\n                let lightness;\r\n                [hue, saturation, lightness] = Color.hsv2hsl(hue, saturation, value);\r\n                return `hsl(${Math.round(hue)}, ${+(saturation * 100).toFixed(1)}%, ${+(lightness * 100).toFixed(1)}%)`;\r\n            }\r\n\r\n            case \"rgb\": {\r\n                return this.colorControl.toColorString();\r\n            }\r\n\r\n            case \"hex\":\r\n            default: {\r\n                let {red, green, blue} = this.colorControl;\r\n                return Color.rgb2hex(red, green, blue);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    public setColor(color: string) {\r\n        color = color.trim();\r\n        let hue, saturation, value;\r\n        let lightness;\r\n\r\n        // #fff\r\n        if (color.charAt(0) === \"#\") {\r\n            let [red, green, blue] = Color.hex2rgb(color);\r\n            [hue, saturation, lightness] = Color.rgb2hsl(red, green, blue);\r\n            [hue, saturation, value] = Color.hsl2hsv(hue, saturation, lightness);\r\n\r\n        // rgb(255, 255, 255)\r\n        // rgb(100%, 100%, 100%)\r\n        } else if (color.includes(\"rgb\")) {\r\n            let reg = /rgb\\((.+)\\)/;\r\n            let valueString = reg.exec(color)[1];\r\n            let valueArray;\r\n            let red, green, blue;\r\n\r\n            if (valueString.includes(\"%\")) {\r\n                valueArray = valueString.replace(/%/g, \"\").split(\",\");\r\n                [red, green, blue] = valueArray.map(item => {\r\n                    return +item / 100 * 255;\r\n                });\r\n                [hue, saturation, lightness] = Color.rgb2hsl(red, green, blue);\r\n\r\n            } else {\r\n                valueArray = valueString.split(\",\");\r\n                [red, green, blue] = valueArray.map(item => {\r\n                    return +item;\r\n                });\r\n                [hue, saturation, lightness] = Color.rgb2hsl(red, green, blue);\r\n            }\r\n            \r\n        // hsl(192, 0%, 100%)\r\n        } else if (color.includes(\"hsl\")) {\r\n            let reg = /hsl\\((.+)\\)/;\r\n            let valueString = reg.exec(color)[1];\r\n            let valueArray;\r\n\r\n            valueArray = valueString.split(\",\");\r\n            [hue, saturation, lightness] = valueArray.map(item => {\r\n                return item.includes(\"%\") ? +item.replace(\"%\", \"\") / 100 : +item;\r\n            });\r\n\r\n        } else {\r\n            throw new Error(\"Not a valid color string.\")\r\n        }\r\n\r\n        [hue, saturation, value] = Color.hsl2hsv(hue, saturation, lightness);\r\n\r\n        this.colorControl.hue = hue;\r\n        this.colorControl.saturation = saturation;\r\n        this.colorControl.value = value;\r\n        this.colorControl.refreshByHSV();\r\n        this.refreshColorDisplay();\r\n    }\r\n\r\n    public on(event: string, fn: Function) {\r\n        this.subscriptions[event] = this.subscriptions[event] || [];\r\n        this.subscriptions[event].push(fn);\r\n    }\r\n\r\n    public off(event: string, fn: Function) {\r\n        let eventSubscriptions = this.subscriptions[event];\r\n        let index = eventSubscriptions.indexOf(fn);\r\n\r\n        if (index > -1) {\r\n            eventSubscriptions.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    private emit(event: string, ...args: any[]) {\r\n        let eventSubscriptions = this.subscriptions[event];\r\n\r\n        if (eventSubscriptions) {\r\n            for (let i = 0; i < eventSubscriptions.length; i++) {\r\n                let fn = eventSubscriptions[i];\r\n                fn.apply(this, args);\r\n            }\r\n        }\r\n    }\r\n\r\n    private init() {\r\n        this.genElements();\r\n        this.setColor(this.wheelPanelOptions.initColor);\r\n        this.bindEvents();\r\n    }\r\n\r\n    // DOM ref:\r\n    // <div class=\"sai-picking-area-container\">\r\n    //   <div class=\"sai-picking-area\" style=\"background-color: #ff1e00;\">\r\n    //     <div class=\"sai-color-picker\"></div>\r\n    //   </div>\r\n    //   <div class=\"sai-hue-picker\"></div>\r\n    // </div>\r\n    private genElements() {\r\n        let fragment = document.createDocumentFragment();\r\n        let frameCanvas = this.createFrameCanvas();\r\n\r\n        // styles for elements\r\n        let pickingAreaContainerStyle = {\r\n            width: this.wheelPanelOptions.size + \"px\",\r\n            height: this.wheelPanelOptions.size + \"px\",\r\n            padding: (this.wheelPanelOptions.size - this.posControl.squareSize) / 2 + \"px\",\r\n            background: `${this.wheelPanelOptions.backgroundColor} url(${frameCanvas.toDataURL()}) center center no-repeat`\r\n        };\r\n\r\n        // element 1: color picker\r\n        let colorPicker = document.createElement(\"div\");\r\n        colorPicker.className = \"sai-color-picker\";\r\n\r\n        // element 2: picking area\r\n        let pickingArea = document.createElement(\"div\");\r\n        pickingArea.className = \"sai-picking-area\";\r\n\r\n        // element 3: hue picker\r\n        let huePicker = document.createElement(\"div\");\r\n        huePicker.className = \"sai-hue-picker\";\r\n\r\n        // container element: picking area container\r\n        let pickingAreaContainer = document.createElement(\"div\");\r\n        pickingAreaContainer.className = \"sai-picking-area-container\";\r\n        this.setStyleCombined(pickingAreaContainer, pickingAreaContainerStyle);\r\n\r\n        // use inline style if needed\r\n        if (this.wheelPanelOptions.inlineStyle) {\r\n            let pickerStyle = {\r\n                position: \"absolute\",\r\n                width: \"10px\",\r\n                height: \"10px\",\r\n                margin: \"-5px 0 0 -5px\",\r\n                borderWidth: \"2px\",\r\n                borderStyle: \"solid\",\r\n                borderRadius: \"50%\",\r\n                boxSizing: \"border-box\"\r\n            };\r\n            let pickingAreaStyle = {\r\n                position: \"relative\",\r\n                height: \"100%\"\r\n            };\r\n            let pickingAreaContainerBaseStyle = {\r\n                position: \"relative\",\r\n                boxSizing: \"border-box\"\r\n            };\r\n            this.setupPickingAreaGradient(pickingArea);\r\n            this.setStyleCombined(colorPicker, pickerStyle);\r\n            this.setStyleCombined(huePicker, pickerStyle);\r\n            this.setStyleCombined(pickingArea, pickingAreaStyle);\r\n            this.setStyleCombined(pickingAreaContainer, pickingAreaContainerBaseStyle);\r\n        }\r\n\r\n\r\n        // assembly and update DOM\r\n        pickingArea.appendChild(colorPicker);\r\n        pickingAreaContainer.appendChild(pickingArea);\r\n        pickingAreaContainer.appendChild(huePicker);\r\n        fragment.appendChild(pickingAreaContainer);\r\n        this.el.appendChild(fragment);\r\n\r\n        // save as private properties\r\n        this.pickingAreaContainer = pickingAreaContainer;\r\n        this.pickingArea = pickingArea;\r\n        this.colorPicker = colorPicker;\r\n        this.huePicker = huePicker;\r\n    }\r\n\r\n    private setStyleCombined(el: HTMLElement, styleObject: any) {\r\n        let elStyle = el.style as { [key: string]: any };\r\n\r\n        Object.keys(styleObject).forEach(key => {\r\n            let value = styleObject[key];\r\n            elStyle[key] = value;\r\n        });\r\n    }\r\n\r\n    // less code ref:\r\n    // background-image: linear-gradient(to top, #000 0%, rgba(#000, 0) 100%), linear-gradient(to right, #fff 0%, rgba(#fff, 0) 100%);\r\n    private setupPickingAreaGradient(el: HTMLElement) {\r\n        let gradientString = \"linear-gradient(to top, #000 0%, rgba(#000, 0) 100%), linear-gradient(to right, #fff 0%, rgba(#fff, 0) 100%)\";\r\n        let gradientStringWebkit = \"-webkit-gradient(linear, left bottom, left top, from(#000), to(rgba(0, 0, 0, 0))), -webkit-gradient(linear, left top, right top, from(#fff), to(rgba(255, 255, 255, 0)))\";\r\n        el.style.backgroundImage = gradientString;\r\n        el.style.backgroundImage = gradientStringWebkit;\r\n    }\r\n\r\n    private bindEvents() {\r\n        this.pickingAreaContainer.addEventListener(\"mousedown\", (e) => {\r\n            let pointX = e.clientX + window.pageXOffset;\r\n            let pointY = e.clientY + window.pageYOffset;\r\n            this.triggerDown(pointX, pointY);\r\n\r\n            // prevent default drag\r\n            e.preventDefault();\r\n        });\r\n    }\r\n\r\n    private triggerDown(pointX: number, pointY: number) {\r\n        let rect = this.pickingAreaContainer.getBoundingClientRect();\r\n        this.centerPoint.x = (rect.left + rect.right) / 2 + window.pageXOffset;\r\n        this.centerPoint.y = (rect.top + rect.bottom) / 2 + window.pageYOffset;\r\n\r\n        let dx = pointX - this.centerPoint.x;\r\n        let dy = pointY - this.centerPoint.y;\r\n        let distance = Math.sqrt(dx * dx + dy * dy);\r\n        let squareZeroX = this.centerPoint.x - this.posControl.squareSize / 2;\r\n        let squareZeroY = this.centerPoint.y - this.posControl.squareSize / 2;\r\n        let squarePointX = pointX - squareZeroX;\r\n        let squarePointY = pointY - squareZeroY;\r\n\r\n        if (distance <= this.posControl.outerRadius && distance >= this.posControl.innerRadius) {\r\n            this.triggerMoveForHue(pointX, pointY);\r\n            this.startWatchMove(\"hue\");\r\n        } else if (squarePointX >= 0 && squarePointX <= this.posControl.squareSize &&\r\n            squarePointY >= 0 && squarePointY <= this.posControl.squareSize) {\r\n            this.triggerMoveForColor(pointX, pointY);\r\n            this.startWatchMove(\"color\");\r\n        }\r\n    }\r\n\r\n    private startWatchMove(type: string) {\r\n        const genMoveHandler = (triggerFn: Function) => {\r\n            return function (e: any) {\r\n                let pointX = e.clientX + window.pageXOffset;\r\n                let pointY = e.clientY + window.pageYOffset;\r\n                triggerFn(pointX, pointY);\r\n            };\r\n        };\r\n        let eventControl = this.eventControl;\r\n        let currentMoveHandler = type === \"hue\" ? genMoveHandler(this.triggerMoveForHue.bind(this)) \r\n        : genMoveHandler(this.triggerMoveForColor.bind(this));\r\n\r\n        if (!eventControl.mousemove) {\r\n            eventControl.mousemove = true;\r\n            document.addEventListener(\"mousemove\", currentMoveHandler);\r\n            document.addEventListener(\"mouseup\", function handleMouseup() {\r\n                document.removeEventListener(\"mouseup\", handleMouseup);\r\n                document.removeEventListener(\"mousemove\", currentMoveHandler);\r\n                eventControl.mousemove = false;\r\n            });\r\n        }\r\n    }\r\n\r\n    private validateWithEdge(value: number, min: number, max: number) {\r\n        if (value > max) {\r\n            return max;\r\n        } else if (value < 0) {\r\n            return min;\r\n        } else {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    private triggerMoveForColor(pointX: number, pointY: number) {\r\n        let squareZeroX = this.centerPoint.x - this.posControl.squareSize / 2;\r\n        let squareZeroY = this.centerPoint.y - this.posControl.squareSize / 2;\r\n        let squarePointX = this.validateWithEdge(pointX - squareZeroX, 0, this.posControl.squareSize);\r\n        let squarePointY = this.validateWithEdge(pointY - squareZeroY, 0, this.posControl.squareSize);\r\n        let percentX = squarePointX / this.posControl.squareSize;\r\n        let percentY = squarePointY / this.posControl.squareSize;\r\n        let hue = this.colorControl.hue;\r\n        let saturation = percentX;\r\n        let value = 1 - percentY;\r\n        let targetColor = new Color(hue, saturation, value);\r\n\r\n        this.colorControl = targetColor;\r\n        this.refreshColorDisplay();\r\n    }\r\n\r\n    private triggerMoveForHue(pointX: number, pointY: number) {\r\n        let dx = pointX - this.centerPoint.x;\r\n        let dy = pointY - this.centerPoint.y;\r\n        let phi = Math.atan2(dy, dx);\r\n        let deg = rad2deg(phi);\r\n        let hue = (deg + this.wheelPanelOptions.startAngle) % 360;\r\n\r\n        this.colorControl.hue = hue;\r\n        this.colorControl.refreshByHSV();\r\n        this.refreshColorDisplay();\r\n    }\r\n\r\n    private refreshColorDisplay() {\r\n        let hueColor = new Color(this.colorControl.hue, 1, 1);\r\n        let pickerColorHue = (this.colorControl.hue + 180) % 360;\r\n        let huePhi = deg2rad(this.colorControl.hue + 180 - this.wheelPanelOptions.startAngle);\r\n        let huePickerX = this.posControl.middleRadius * Math.cos(huePhi) + this.wheelPanelOptions.size / 2;\r\n        let huePickerY = this.posControl.middleRadius * Math.sin(huePhi) + this.wheelPanelOptions.size / 2;\r\n        let huePickerColor = new Color(pickerColorHue, 1, 1);\r\n        let colorPickerX = this.colorControl.saturation * this.posControl.squareSize;\r\n        let colorPickerY = (1 - this.colorControl.value) * this.posControl.squareSize;\r\n        let colorPickerColorSaturation = this.colorControl.value;\r\n        let colorPickerColorValue = 1 - this.colorControl.value * (1 - this.colorControl.saturation);\r\n        let colorPickerColor = new Color(pickerColorHue, colorPickerColorSaturation, colorPickerColorValue);\r\n\r\n        this.pickingArea.style.backgroundColor = hueColor.toColorString();\r\n\r\n        this.huePicker.style.borderColor = huePickerColor.toColorString();\r\n        this.huePicker.style.left = huePickerX + \"px\";\r\n        this.huePicker.style.top = huePickerY + \"px\";\r\n\r\n        this.colorPicker.style.borderColor = colorPickerColor.toColorString();\r\n        this.colorPicker.style.left = colorPickerX + \"px\";\r\n        this.colorPicker.style.top = colorPickerY + \"px\";\r\n\r\n        // event \"update\"\r\n        this.emit(\"update\", this.getColor());\r\n    }\r\n\r\n    private createFrameCanvas() {\r\n        let frameCanvas = document.createElement(\"canvas\");\r\n        let ctx = frameCanvas.getContext(\"2d\");\r\n\r\n        frameCanvas.width = this.wheelPanelOptions.size;\r\n        frameCanvas.height = this.wheelPanelOptions.size;\r\n\r\n        this.drawHueWheel(ctx);\r\n        return frameCanvas;\r\n    }\r\n\r\n    private drawHueWheel(ctx: CanvasRenderingContext2D) {\r\n\r\n        // local variable here for \"this.wheelPanelOptions\"\r\n        let wheelPanelOptions = this.wheelPanelOptions;\r\n        let image = ctx.createImageData(wheelPanelOptions.size, wheelPanelOptions.size);\r\n        let data = image.data;\r\n\r\n        let radius = wheelPanelOptions.size / 2 - wheelPanelOptions.realBorderOffset - wheelPanelOptions.realBorderWidth;\r\n        let innerRadius = radius - wheelPanelOptions.thickness;\r\n        let outerRadius = radius;\r\n        let centerX = wheelPanelOptions.size / 2;\r\n        let centerY = wheelPanelOptions.size / 2;\r\n        let pixelLength = 4;\r\n        let rowLength = wheelPanelOptions.size;\r\n\r\n        // save for picker control\r\n        this.posControl.innerRadius = innerRadius;\r\n        this.posControl.outerRadius = outerRadius;\r\n        this.posControl.middleRadius = (innerRadius + outerRadius) / 2;\r\n        this.posControl.squareSize = (((innerRadius - wheelPanelOptions.realBorderOffset) / Math.sqrt(2)) - wheelPanelOptions.realBorderOffset) * 2;\r\n\r\n        for (let x = -radius; x < radius; x++) {\r\n            for (let y = -radius; y < radius; y++) {\r\n                let [r, phi] = xy2polar(x, y);\r\n\r\n                if (r <= outerRadius && r >= innerRadius) {\r\n\r\n                    let deg = rad2deg(phi);\r\n                    let adjustedX = x + wheelPanelOptions.size / 2;\r\n                    let adjustedY = y + wheelPanelOptions.size / 2;\r\n\r\n                    let index = (adjustedX + (adjustedY * rowLength)) * pixelLength;\r\n                    let hue = (deg + wheelPanelOptions.startAngle) % 360;\r\n\r\n                    // the colors on the color wheel are all S:1, V:1\r\n                    let saturation = 1;\r\n                    let value = 1;\r\n\r\n                    let [red, green, blue] = Color.hsv2rgb(hue, saturation, value);\r\n                    let alpha = 255;\r\n\r\n                    data[index] = red;\r\n                    data[index + 1] = green;\r\n                    data[index + 2] = blue;\r\n                    data[index + 3] = alpha;\r\n                }\r\n            }\r\n        }\r\n\r\n        ctx.putImageData(image, 0, 0);\r\n\r\n        // border to overwrite matte pixels\r\n        ctx.lineWidth = wheelPanelOptions.matteBorderWidth;\r\n        ctx.strokeStyle = wheelPanelOptions.backgroundColor;\r\n        ctx.beginPath();\r\n        ctx.arc(centerX, centerY, outerRadius, 0, Math.PI * 2);\r\n        ctx.stroke();\r\n        ctx.beginPath();\r\n        ctx.arc(centerX, centerY, innerRadius, 0, Math.PI * 2);\r\n        ctx.stroke();\r\n\r\n        // real border\r\n        ctx.lineWidth = wheelPanelOptions.realBorderWidth;\r\n        ctx.strokeStyle = wheelPanelOptions.borderColor;\r\n        ctx.beginPath();\r\n        ctx.arc(centerX, centerY, outerRadius + wheelPanelOptions.realBorderOffset, 0, Math.PI * 2);\r\n        ctx.stroke();\r\n\r\n        // inner border for picking area\r\n        let radCollection = [\r\n            [-Math.PI / 4 + wheelPanelOptions.innerBorderGapRadian, Math.PI / 4 - wheelPanelOptions.innerBorderGapRadian],\r\n            [Math.PI / 4 + wheelPanelOptions.innerBorderGapRadian, Math.PI * 3 / 4 - wheelPanelOptions.innerBorderGapRadian],\r\n            [Math.PI * 3 / 4 + wheelPanelOptions.innerBorderGapRadian, Math.PI * 5 / 4 - wheelPanelOptions.innerBorderGapRadian],\r\n            [Math.PI * 5 / 4 + wheelPanelOptions.innerBorderGapRadian, Math.PI * 7 / 4 - wheelPanelOptions.innerBorderGapRadian]\r\n        ];\r\n\r\n        for (let i = 0; i < radCollection.length; i++) {\r\n            ctx.beginPath();\r\n            ctx.arc(centerX, centerY, innerRadius - wheelPanelOptions.realBorderOffset, radCollection[i][0], radCollection[i][1]);\r\n            ctx.closePath();\r\n            ctx.stroke();\r\n        }\r\n    }\r\n}\r\n\r\nclass Color {\r\n\r\n    // hsv\r\n    // h: [0, 360]\r\n    // s: [0, 1]\r\n    // v: [0, 1]\r\n    public hue: number;\r\n    public saturation: number;\r\n    public value: number;\r\n\r\n    // rgb\r\n    // r: [0, 255] | \"int\"\r\n    // g: [0, 255] | \"int\"\r\n    // b: [0, 255] | \"int\"\r\n    public red: number;\r\n    public green: number;\r\n    public blue: number;\r\n\r\n    public constructor(hue: number, saturation: number, value: number) {\r\n        this.hue = hue;\r\n        this.saturation = saturation;\r\n        this.value = value;\r\n        this.refreshByHSV();\r\n    }\r\n\r\n    // format \"rgb()\" as the color string\r\n    public toColorString() {\r\n        return `rgb(${this.red}, ${this.green}, ${this.blue})`;\r\n    }\r\n\r\n    public refreshByHSV() {\r\n        let [red, green, blue] = Color.hsv2rgb(this.hue, this.saturation, this.value);\r\n        this.red = Math.round(red);\r\n        this.green = Math.round(green);\r\n        this.blue = Math.round(blue);\r\n    }\r\n\r\n    // https://en.wikipedia.org/wiki/HSL_and_HSV\r\n    public static hsv2rgb(hue: number, saturation: number, value: number) {\r\n        let chroma = value * saturation;\r\n        let hue1 = hue / 60;\r\n        let x = chroma * (1 - Math.abs((hue1 % 2) - 1));\r\n        let r1, g1, b1;\r\n        if (hue1 >= 0 && hue1 <= 1) {\r\n            ([r1, g1, b1] = [chroma, x, 0]);\r\n        } else if (hue1 >= 1 && hue1 <= 2) {\r\n            ([r1, g1, b1] = [x, chroma, 0]);\r\n        } else if (hue1 >= 2 && hue1 <= 3) {\r\n            ([r1, g1, b1] = [0, chroma, x]);\r\n        } else if (hue1 >= 3 && hue1 <= 4) {\r\n            ([r1, g1, b1] = [0, x, chroma]);\r\n        } else if (hue1 >= 4 && hue1 <= 5) {\r\n            ([r1, g1, b1] = [x, 0, chroma]);\r\n        } else if (hue1 >= 5 && hue1 <= 6) {\r\n            ([r1, g1, b1] = [chroma, 0, x]);\r\n        }\r\n\r\n        let m = value - chroma;\r\n        let [r, g, b] = [r1 + m, g1 + m, b1 + m];\r\n        return [255 * r, 255 * g, 255 * b];\r\n    }\r\n\r\n    // https://css-tricks.com/converting-color-spaces-in-javascript/\r\n    public static rgb2hsl(r: number, g: number, b: number) {\r\n        r /= 255;\r\n        g /= 255;\r\n        b /= 255;\r\n        let cmin = Math.min(r, g, b),\r\n            cmax = Math.max(r, g, b),\r\n            delta = cmax - cmin,\r\n            h = 0,\r\n            s = 0,\r\n            l = 0;\r\n\r\n        if (delta == 0)\r\n            h = 0;\r\n        else if (cmax == r)\r\n            h = ((g - b) / delta) % 6;\r\n        else if (cmax == g)\r\n            h = (b - r) / delta + 2;\r\n        else\r\n            h = (r - g) / delta + 4;\r\n\r\n        h = Math.round(h * 60);\r\n\r\n        if (h < 0)\r\n            h += 360;\r\n\r\n        l = (cmax + cmin) / 2;\r\n        s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));;\r\n\r\n        return [h, s, l];\r\n    }\r\n\r\n    public static hsl2hsv(h: number, s: number, l: number) {\r\n        let v = s * Math.min(l, 1 - l) + l;\r\n        return [h, v ? 2 - 2 * l / v : 0, v];\r\n    }\r\n\r\n    public static hsv2hsl(h: number, s: number, v: number) {\r\n        let l = v - v * s / 2, m = Math.min(l, 1 - l);\r\n        return [h, m ? (v - l) / m : 0, l];\r\n    }\r\n\r\n    // https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\n    // support shorthand form like \"#fff\"\r\n    public static hex2rgb(hex: string) {\r\n        let shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n        hex = hex.replace(shorthandRegex, function (m, r, g, b) {\r\n            return r + r + g + g + b + b;\r\n        });\r\n\r\n        let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        let [r, g, b] = [parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)];\r\n\r\n        return [r, g, b];\r\n    }\r\n\r\n    // r, g, b should be \"int\"\r\n    public static rgb2hex(r: any, g: any, b: any) {\r\n        r = r.toString(16);\r\n        g = g.toString(16);\r\n        b = b.toString(16);\r\n\r\n        if (r.length == 1)\r\n            r = \"0\" + r;\r\n        if (g.length == 1)\r\n            g = \"0\" + g;\r\n        if (b.length == 1)\r\n            b = \"0\" + b;\r\n\r\n        return \"#\" + r + g + b;\r\n    }\r\n}\r\n\r\n/*------------------------------------------------------------------------*\\\r\n\r\n  # helper function\r\n\r\n\\*------------------------------------------------------------------------*/\r\n\r\nfunction polar2xy(r: number, phi: number) {\r\n    let x = r * Math.cos(phi);\r\n    let y = r * Math.sin(phi);\r\n    return [x, y];\r\n}\r\n\r\nfunction xy2polar(x: number, y: number) {\r\n    let r = Math.sqrt(x * x + y * y);\r\n    let phi = Math.atan2(y, x);\r\n    return [r, phi];\r\n}\r\n\r\nfunction rad2deg(rad: number) {\r\n    return ((rad + Math.PI) / (2 * Math.PI)) * 360;\r\n}\r\n\r\nfunction deg2rad(deg: number) {\r\n    return (deg % 360) / 180 * Math.PI;\r\n}\r\n\r\n/*------------------------------------------------------------------------*\\\r\n\r\n  # export\r\n\r\n\\*------------------------------------------------------------------------*/\r\n\r\nexport default SaiStyleColorPicker;"],"sourceRoot":""}