{"version":3,"sources":["webpack://SaiStyleColorPicker/webpack/universalModuleDefinition","webpack://SaiStyleColorPicker/webpack/bootstrap","webpack://SaiStyleColorPicker/./src/lib/SaiStyleColorPicker.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","SaiStyleColorPicker","el","config","this","subscriptions","defaultConfig","size","thickness","matteBorderWidth","realBorderWidth","realBorderOffset","innerBorderGapRadian","Math","PI","startAngle","backgroundColor","borderColor","wheelPanelOptions","colorControl","Color","centerPoint","x","y","posControl","innerRadius","outerRadius","middleRadius","squareSize","eventControl","mousemove","assign","init","getColor","type","lightness","_b","hue","saturation","_a","hsv2hsl","round","toColorString","_c","red","green","blue","rgb2hex","setColor","color","trim","charAt","hex2rgb","rgb2hsl","hsl2hsv","refreshByHSV","on","event","fn","push","off","eventSubscriptions","index","indexOf","splice","emit","args","_i","arguments","length","apply","genElements","refreshColorDisplay","bindEvents","fragment","document","createDocumentFragment","frameCanvas","createFrameCanvas","pickingAreaContainerStyle","width","height","padding","background","toDataURL","colorPicker","createElement","className","pickingArea","huePicker","pickingAreaContainer","setStyleCombined","appendChild","styleObject","elStyle","style","keys","forEach","_this","addEventListener","e","pointX","clientX","pageXOffset","pointY","clientY","pageYOffset","triggerDown","preventDefault","rect","getBoundingClientRect","left","right","top","bottom","dx","dy","distance","sqrt","squarePointX","squarePointY","triggerMoveForHue","startWatchMove","triggerMoveForColor","genMoveHandler","triggerFn","currentMoveHandler","handleMouseup","removeEventListener","validateWithEdge","min","max","squareZeroX","squareZeroY","percentX","percentY","targetColor","rad2deg","atan2","hueColor","pickerColorHue","huePhi","huePickerX","cos","huePickerY","sin","huePickerColor","colorPickerX","colorPickerY","colorPickerColorSaturation","colorPickerColorValue","colorPickerColor","ctx","getContext","drawHueWheel","image","createImageData","data","radius","centerX","centerY","rowLength","xy2polar","phi","deg","hsv2rgb","putImageData","lineWidth","strokeStyle","beginPath","arc","stroke","radCollection","closePath","r1","g1","b1","chroma","hue1","abs","_d","_e","_f","_g","g","b","a","f","h","v","hex","replace","result","exec","parseInt","map","toString","padStart","join","rad"],"mappings":"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","file":"sai-style-color-picker.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SaiStyleColorPicker\"] = factory();\n\telse\n\t\troot[\"SaiStyleColorPicker\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\r\nimport \"./picker.less\";\r\n\r\n/*------------------------------------------------------------------------*\\\r\n\r\n  # classes\r\n\r\n\\*------------------------------------------------------------------------*/\r\n\r\nclass SaiStyleColorPicker {\r\n\r\n    // mini pub/sub\r\n    private subscriptions: any = {};\r\n\r\n    // config (options)\r\n    private defaultConfig = {\r\n        size: 207,\r\n        thickness: 21,\r\n        matteBorderWidth: 2,\r\n        realBorderWidth: 1,\r\n        realBorderOffset: 1,\r\n        innerBorderGapRadian: Math.PI / 180,\r\n        startAngle: 330,\r\n        backgroundColor: \"#fff\",\r\n        borderColor: \"#acacac\"\r\n    };\r\n    private wheelPanelOptions: any = {};\r\n\r\n    // control variables\r\n    private colorControl: Color = new Color(196, 0.55, 0.95);\r\n    private centerPoint: any = {\r\n        x: 0,\r\n        y: 0\r\n    };\r\n    private posControl: any = {\r\n        innerRadius: 0,\r\n        outerRadius: 0,\r\n        middleRadius: 0,\r\n        squareSize: 0\r\n    };\r\n    private eventControl: any = {\r\n        mousemove: false\r\n    };\r\n\r\n    // dom elements\r\n    private el: HTMLElement;\r\n    private pickingAreaContainer: HTMLElement;\r\n    private pickingArea: HTMLElement;\r\n    private huePicker: HTMLElement;\r\n    private colorPicker: HTMLElement;\r\n\r\n    public constructor(el: HTMLElement, config: Object = {}) {\r\n        this.wheelPanelOptions = Object.assign({}, this.defaultConfig, config);\r\n        this.el = el;\r\n        this.init();\r\n    }\r\n\r\n    public getColor(type?: String) {\r\n        \r\n        switch (type) {\r\n\r\n            case \"hsl\": {\r\n                let {hue, saturation, value} = this.colorControl;\r\n                let lightness;\r\n                [hue, saturation, lightness] = Color.hsv2hsl(hue, saturation, value);\r\n                return `hsl(${Math.round(hue)}, ${Math.round(saturation * 100)}%, ${Math.round(lightness * 100)}%)`;\r\n            }\r\n\r\n            case \"rgb\": {\r\n                return this.colorControl.toColorString();\r\n            }\r\n\r\n            case \"hex\":\r\n            default: {\r\n                let {red, green, blue} = this.colorControl;\r\n                red = Math.round(red);\r\n                green = Math.round(green);\r\n                blue = Math.round(blue);\r\n                return Color.rgb2hex(red, green, blue);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    public setColor(color: string) {\r\n        color = color.trim();\r\n        let hue;\r\n        let saturation;\r\n        let value;\r\n\r\n        if (color.charAt(0) === \"#\") {\r\n            let [red, green, blue] = Color.hex2rgb(color);\r\n            let lightness;\r\n            [hue, saturation, lightness] = Color.rgb2hsl(red, green, blue);\r\n            [hue, saturation, value] = Color.hsl2hsv(hue, saturation, lightness);\r\n        }\r\n\r\n        this.colorControl.hue = hue;\r\n        this.colorControl.saturation = saturation;\r\n        this.colorControl.value = value;\r\n        this.colorControl.refreshByHSV();\r\n    }\r\n\r\n    public on(event: string, fn: Function) {\r\n        this.subscriptions[event] = this.subscriptions[event] || [];\r\n        this.subscriptions[event].push(fn);\r\n    }\r\n\r\n    public off(event: string, fn: Function) {\r\n        let eventSubscriptions = this.subscriptions[event];\r\n        let index = eventSubscriptions.indexOf(fn);\r\n\r\n        if (index > -1) {\r\n            eventSubscriptions.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    private emit(event: string, ...args: any[]) {\r\n        let eventSubscriptions = this.subscriptions[event];\r\n\r\n        if (eventSubscriptions) {\r\n            for (let i = 0; i < eventSubscriptions.length; i++) {\r\n                let fn = eventSubscriptions[i];\r\n                fn.apply(null, args);\r\n            }\r\n        }\r\n    }\r\n\r\n    private init() {\r\n        this.genElements();\r\n        this.refreshColorDisplay();\r\n        this.bindEvents();\r\n    }\r\n\r\n    // DOM ref:\r\n    // <div class=\"sai-picking-area-container\">\r\n    //   <div class=\"sai-picking-area\" style=\"background-color: #ff1e00;\">\r\n    //     <div class=\"sai-color-picker\"></div>\r\n    //   </div>\r\n    //   <div class=\"sai-hue-picker\"></div>\r\n    // </div>\r\n    private genElements() {\r\n        let fragment = document.createDocumentFragment();\r\n        let frameCanvas = this.createFrameCanvas();\r\n\r\n        // styles for elements\r\n        let pickingAreaContainerStyle = {\r\n            width: this.wheelPanelOptions.size + \"px\",\r\n            height: this.wheelPanelOptions.size + \"px\",\r\n            padding: (this.wheelPanelOptions.size - this.posControl.squareSize) / 2 + \"px\",\r\n            background: `${this.wheelPanelOptions.backgroundColor} url(${frameCanvas.toDataURL()}) center center no-repeat`\r\n        };\r\n\r\n        // element 1: color picker\r\n        let colorPicker = document.createElement(\"div\");\r\n        colorPicker.className = \"sai-color-picker\";\r\n\r\n        // element 2: picking area\r\n        let pickingArea = document.createElement(\"div\");\r\n        pickingArea.className = \"sai-picking-area\";\r\n\r\n        // element 3: hue picker\r\n        let huePicker = document.createElement(\"div\");\r\n        huePicker.className = \"sai-hue-picker\";\r\n\r\n        // container element: picking area container\r\n        let pickingAreaContainer = document.createElement(\"div\");\r\n        pickingAreaContainer.className = \"sai-picking-area-container\";\r\n        this.setStyleCombined(pickingAreaContainer, pickingAreaContainerStyle);\r\n\r\n        // assembly and update DOM\r\n        pickingArea.appendChild(colorPicker);\r\n        pickingAreaContainer.appendChild(pickingArea);\r\n        pickingAreaContainer.appendChild(huePicker);\r\n        fragment.appendChild(pickingAreaContainer);\r\n        this.el.appendChild(fragment);\r\n\r\n        // save as private properties\r\n        this.pickingAreaContainer = pickingAreaContainer;\r\n        this.pickingArea = pickingArea;\r\n        this.colorPicker = colorPicker;\r\n        this.huePicker = huePicker;\r\n    }\r\n\r\n    private setStyleCombined(el: HTMLElement, styleObject: any) {\r\n        let elStyle = el.style as { [key: string]: any };\r\n\r\n        Object.keys(styleObject).forEach(key => {\r\n            let value = styleObject[key];\r\n            elStyle[key] = value;\r\n        });\r\n    }\r\n\r\n    private bindEvents() {\r\n        this.pickingAreaContainer.addEventListener(\"mousedown\", (e) => {\r\n            let pointX = e.clientX + window.pageXOffset;\r\n            let pointY = e.clientY + window.pageYOffset;\r\n            this.triggerDown(pointX, pointY);\r\n\r\n            // prevent default drag\r\n            e.preventDefault();\r\n        });\r\n    }\r\n\r\n    private triggerDown(pointX: number, pointY: number) {\r\n        let rect = this.pickingAreaContainer.getBoundingClientRect();\r\n        this.centerPoint.x = (rect.left + rect.right) / 2 + window.pageXOffset;\r\n        this.centerPoint.y = (rect.top + rect.bottom) / 2 + window.pageYOffset;\r\n\r\n        let dx = pointX - this.centerPoint.x;\r\n        let dy = pointY - this.centerPoint.y;\r\n        let distance = Math.sqrt(dx * dx + dy * dy);\r\n        let squareZeroX = this.centerPoint.x - this.posControl.squareSize / 2;\r\n        let squareZeroY = this.centerPoint.y - this.posControl.squareSize / 2;\r\n        let squarePointX = pointX - squareZeroX;\r\n        let squarePointY = pointY - squareZeroY;\r\n\r\n        if (distance <= this.posControl.outerRadius && distance >= this.posControl.innerRadius) {\r\n            this.triggerMoveForHue(pointX, pointY);\r\n            this.startWatchMove(\"hue\");\r\n        } else if (squarePointX >= 0 && squarePointX <= this.posControl.squareSize &&\r\n            squarePointY >= 0 && squarePointY <= this.posControl.squareSize) {\r\n            this.triggerMoveForColor(pointX, pointY);\r\n            this.startWatchMove(\"color\");\r\n        }\r\n    }\r\n\r\n    private startWatchMove(type: string) {\r\n        const genMoveHandler = (triggerFn: Function) => {\r\n            return function (e: any) {\r\n                let pointX = e.clientX + window.pageXOffset;\r\n                let pointY = e.clientY + window.pageYOffset;\r\n                triggerFn(pointX, pointY);\r\n            };\r\n        };\r\n        let eventControl = this.eventControl;\r\n        let currentMoveHandler = type === \"hue\" ? genMoveHandler(this.triggerMoveForHue.bind(this)) \r\n        : genMoveHandler(this.triggerMoveForColor.bind(this));\r\n\r\n        if (!eventControl.mousemove) {\r\n            eventControl.mousemove = true;\r\n            document.addEventListener(\"mousemove\", currentMoveHandler);\r\n            document.addEventListener(\"mouseup\", function handleMouseup() {\r\n                document.removeEventListener(\"mouseup\", handleMouseup);\r\n                document.removeEventListener(\"mousemove\", currentMoveHandler);\r\n                eventControl.mousemove = false;\r\n            });\r\n        }\r\n    }\r\n\r\n    private validateWithEdge(value: number, min: number, max: number) {\r\n        if (value > max) {\r\n            return max;\r\n        } else if (value < 0) {\r\n            return min;\r\n        } else {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    private triggerMoveForColor(pointX: number, pointY: number) {\r\n        let squareZeroX = this.centerPoint.x - this.posControl.squareSize / 2;\r\n        let squareZeroY = this.centerPoint.y - this.posControl.squareSize / 2;\r\n        let squarePointX = this.validateWithEdge(pointX - squareZeroX, 0, this.posControl.squareSize);\r\n        let squarePointY = this.validateWithEdge(pointY - squareZeroY, 0, this.posControl.squareSize);\r\n        let percentX = squarePointX / this.posControl.squareSize;\r\n        let percentY = squarePointY / this.posControl.squareSize;\r\n        let hue = this.colorControl.hue;\r\n        let saturation = percentX;\r\n        let value = 1 - percentY;\r\n        let targetColor = new Color(hue, saturation, value);\r\n\r\n        this.colorControl = targetColor;\r\n        this.refreshColorDisplay();\r\n    }\r\n\r\n    private triggerMoveForHue(pointX: number, pointY: number) {\r\n        let dx = pointX - this.centerPoint.x;\r\n        let dy = pointY - this.centerPoint.y;\r\n        let phi = Math.atan2(dy, dx);\r\n        let deg = rad2deg(phi);\r\n        let hue = (deg + this.wheelPanelOptions.startAngle) % 360;\r\n\r\n        this.colorControl.hue = hue;\r\n        this.colorControl.refreshByHSV();\r\n        this.refreshColorDisplay();\r\n    }\r\n\r\n    private refreshColorDisplay() {\r\n        let hueColor = new Color(this.colorControl.hue, 1, 1);\r\n        let pickerColorHue = (this.colorControl.hue + 180) % 360;\r\n        let huePhi = deg2rad(this.colorControl.hue + 180 - this.wheelPanelOptions.startAngle);\r\n        let huePickerX = this.posControl.middleRadius * Math.cos(huePhi) + this.wheelPanelOptions.size / 2;\r\n        let huePickerY = this.posControl.middleRadius * Math.sin(huePhi) + this.wheelPanelOptions.size / 2;\r\n        let huePickerColor = new Color(pickerColorHue, 1, 1);\r\n        let colorPickerX = this.colorControl.saturation * this.posControl.squareSize;\r\n        let colorPickerY = (1 - this.colorControl.value) * this.posControl.squareSize;\r\n        let colorPickerColorSaturation = this.colorControl.value;\r\n        let colorPickerColorValue = 1 - this.colorControl.value * (1 - this.colorControl.saturation);\r\n        let colorPickerColor = new Color(pickerColorHue, colorPickerColorSaturation, colorPickerColorValue);\r\n\r\n        this.pickingArea.style.backgroundColor = hueColor.toColorString();\r\n\r\n        this.huePicker.style.borderColor = huePickerColor.toColorString();\r\n        this.huePicker.style.left = huePickerX + \"px\";\r\n        this.huePicker.style.top = huePickerY + \"px\";\r\n\r\n        this.colorPicker.style.borderColor = colorPickerColor.toColorString();\r\n        this.colorPicker.style.left = colorPickerX + \"px\";\r\n        this.colorPicker.style.top = colorPickerY + \"px\";\r\n\r\n        // event \"update\"\r\n        this.emit(\"update\", this.getColor());\r\n    }\r\n\r\n    private createFrameCanvas() {\r\n        let frameCanvas = document.createElement(\"canvas\");\r\n        let ctx = frameCanvas.getContext(\"2d\");\r\n\r\n        frameCanvas.width = this.wheelPanelOptions.size;\r\n        frameCanvas.height = this.wheelPanelOptions.size;\r\n\r\n        this.drawHueWheel(ctx);\r\n        return frameCanvas;\r\n    }\r\n\r\n    private drawHueWheel(ctx: CanvasRenderingContext2D) {\r\n\r\n        // local variable here for \"this.wheelPanelOptions\"\r\n        let wheelPanelOptions = this.wheelPanelOptions;\r\n        let image = ctx.createImageData(wheelPanelOptions.size, wheelPanelOptions.size);\r\n        let data = image.data;\r\n\r\n        let radius = wheelPanelOptions.size / 2 - wheelPanelOptions.realBorderOffset - wheelPanelOptions.realBorderWidth;\r\n        let innerRadius = radius - wheelPanelOptions.thickness;\r\n        let outerRadius = radius;\r\n        let centerX = wheelPanelOptions.size / 2;\r\n        let centerY = wheelPanelOptions.size / 2;\r\n        let pixelLength = 4;\r\n        let rowLength = wheelPanelOptions.size;\r\n\r\n        // save for picker control\r\n        this.posControl.innerRadius = innerRadius;\r\n        this.posControl.outerRadius = outerRadius;\r\n        this.posControl.middleRadius = (innerRadius + outerRadius) / 2;\r\n        this.posControl.squareSize = (((innerRadius - wheelPanelOptions.realBorderOffset) / Math.sqrt(2)) - wheelPanelOptions.realBorderOffset) * 2;\r\n\r\n        for (let x = -radius; x < radius; x++) {\r\n            for (let y = -radius; y < radius; y++) {\r\n                let [r, phi] = xy2polar(x, y);\r\n\r\n                if (r <= outerRadius && r >= innerRadius) {\r\n\r\n                    let deg = rad2deg(phi);\r\n                    let adjustedX = x + wheelPanelOptions.size / 2;\r\n                    let adjustedY = y + wheelPanelOptions.size / 2;\r\n\r\n                    let index = (adjustedX + (adjustedY * rowLength)) * pixelLength;\r\n                    let hue = (deg + wheelPanelOptions.startAngle) % 360;\r\n\r\n                    // the colors on the color wheel are all S:1, V:1\r\n                    let saturation = 1;\r\n                    let value = 1;\r\n\r\n                    let [red, green, blue] = Color.hsv2rgb(hue, saturation, value);\r\n                    let alpha = 255;\r\n\r\n                    data[index] = red;\r\n                    data[index + 1] = green;\r\n                    data[index + 2] = blue;\r\n                    data[index + 3] = alpha;\r\n                }\r\n            }\r\n        }\r\n\r\n        ctx.putImageData(image, 0, 0);\r\n\r\n        // border to overwrite matte pixels\r\n        ctx.lineWidth = wheelPanelOptions.matteBorderWidth;\r\n        ctx.strokeStyle = wheelPanelOptions.backgroundColor;\r\n        ctx.beginPath();\r\n        ctx.arc(centerX, centerY, outerRadius, 0, Math.PI * 2);\r\n        ctx.stroke();\r\n        ctx.beginPath();\r\n        ctx.arc(centerX, centerY, innerRadius, 0, Math.PI * 2);\r\n        ctx.stroke();\r\n\r\n        // real border\r\n        ctx.lineWidth = wheelPanelOptions.realBorderWidth;\r\n        ctx.strokeStyle = wheelPanelOptions.borderColor;\r\n        ctx.beginPath();\r\n        ctx.arc(centerX, centerY, outerRadius + wheelPanelOptions.realBorderOffset, 0, Math.PI * 2);\r\n        ctx.stroke();\r\n\r\n        // inner border for picking area\r\n        let radCollection = [\r\n            [-Math.PI / 4 + wheelPanelOptions.innerBorderGapRadian, Math.PI / 4 - wheelPanelOptions.innerBorderGapRadian],\r\n            [Math.PI / 4 + wheelPanelOptions.innerBorderGapRadian, Math.PI * 3 / 4 - wheelPanelOptions.innerBorderGapRadian],\r\n            [Math.PI * 3 / 4 + wheelPanelOptions.innerBorderGapRadian, Math.PI * 5 / 4 - wheelPanelOptions.innerBorderGapRadian],\r\n            [Math.PI * 5 / 4 + wheelPanelOptions.innerBorderGapRadian, Math.PI * 7 / 4 - wheelPanelOptions.innerBorderGapRadian]\r\n        ];\r\n\r\n        for (let i = 0; i < radCollection.length; i++) {\r\n            ctx.beginPath();\r\n            ctx.arc(centerX, centerY, innerRadius - wheelPanelOptions.realBorderOffset, radCollection[i][0], radCollection[i][1]);\r\n            ctx.closePath();\r\n            ctx.stroke();\r\n        }\r\n    }\r\n}\r\n\r\nclass Color {\r\n\r\n    // hsv\r\n    // h: [0, 360]\r\n    // s: [0, 1]\r\n    // v: [0, 1]\r\n    public hue: number;\r\n    public saturation: number;\r\n    public value: number;\r\n\r\n    // rgb\r\n    // r: [0, 255]\r\n    // g: [0, 255]\r\n    // b: [0, 255]\r\n    public red: number;\r\n    public green: number;\r\n    public blue: number;\r\n\r\n    public constructor(hue: number, saturation: number, value: number) {\r\n        this.hue = hue;\r\n        this.saturation = saturation;\r\n        this.value = value;\r\n        this.refreshByHSV();\r\n    }\r\n\r\n    // format \"rgb()\" as the color string\r\n    public toColorString() {\r\n        let red = Math.round(this.red);\r\n        let green = Math.round(this.green);\r\n        let blue = Math.round(this.blue);\r\n        return `rgb(${red}, ${green}, ${blue})`;\r\n    }\r\n\r\n    public refreshByHSV() {\r\n        let [red, green, blue] = Color.hsv2rgb(this.hue, this.saturation, this.value);\r\n        this.red = red;\r\n        this.green = green;\r\n        this.blue = blue;\r\n    }\r\n\r\n    // https://en.wikipedia.org/wiki/HSL_and_HSV\r\n    public static hsv2rgb(hue: number, saturation: number, value: number) {\r\n        let chroma = value * saturation;\r\n        let hue1 = hue / 60;\r\n        let x = chroma * (1 - Math.abs((hue1 % 2) - 1));\r\n        let r1, g1, b1;\r\n        if (hue1 >= 0 && hue1 <= 1) {\r\n            ([r1, g1, b1] = [chroma, x, 0]);\r\n        } else if (hue1 >= 1 && hue1 <= 2) {\r\n            ([r1, g1, b1] = [x, chroma, 0]);\r\n        } else if (hue1 >= 2 && hue1 <= 3) {\r\n            ([r1, g1, b1] = [0, chroma, x]);\r\n        } else if (hue1 >= 3 && hue1 <= 4) {\r\n            ([r1, g1, b1] = [0, x, chroma]);\r\n        } else if (hue1 >= 4 && hue1 <= 5) {\r\n            ([r1, g1, b1] = [x, 0, chroma]);\r\n        } else if (hue1 >= 5 && hue1 <= 6) {\r\n            ([r1, g1, b1] = [chroma, 0, x]);\r\n        }\r\n\r\n        let m = value - chroma;\r\n        let [r, g, b] = [r1 + m, g1 + m, b1 + m];\r\n        return [255 * r, 255 * g, 255 * b];\r\n    }\r\n\r\n    public static rgb2hsl(r: number, g: number, b: number) {\r\n        let a = Math.max(r, g, b);\r\n        let i = Math.min(r, g, b);\r\n        let n = a - i;\r\n        let l = (a + i) / 2\r\n        let f = (1 - Math.abs(a + i - 1));\r\n        let s = f ? n / f : 0;\r\n        let h = 0;\r\n        if (n) {\r\n            if (a == r) h = 60 * (0 + (g - b) / n);\r\n            if (a == g) h = 60 * (2 + (b - r) / n);\r\n            if (a == b) h = 60 * (4 + (r - g) / n);\r\n        }\r\n\r\n        return [(h < 0 ? h + 360 : h) % 360, s, l];\r\n    }\r\n\r\n    public static hsl2hsv(h: number, s: number, l: number) {\r\n        let v = s * Math.min(l, 1 - l) + l;\r\n        return [h, v ? 2 - 2 * l / v : 0, v];\r\n    }\r\n\r\n    public static hsv2hsl(h: number, s: number, v: number) {\r\n        let l = v - v * s / 2, m = Math.min(l, 1 - l);\r\n        return [h, m ? (v - l) / m : 0, l];\r\n    }\r\n\r\n    // https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\n    // support shorthand form like \"#fff\"\r\n    public static hex2rgb(hex: string) {\r\n        let shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n        hex = hex.replace(shorthandRegex, function (m, r, g, b) {\r\n            return r + r + g + g + b + b;\r\n        });\r\n\r\n        let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        let [r, g, b] = [parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)];\r\n\r\n        return [r, g, b];\r\n    }\r\n\r\n    public static rgb2hex(r: number, g: number, b: number) {\r\n        return \"#\" + [r, g, b]\r\n        .map(x => x.toString(16).padStart(2, \"0\")).join(\"\");\r\n    }\r\n}\r\n\r\n/*------------------------------------------------------------------------*\\\r\n\r\n  # helper function\r\n\r\n\\*------------------------------------------------------------------------*/\r\n\r\nfunction polar2xy(r: number, phi: number) {\r\n    let x = r * Math.cos(phi);\r\n    let y = r * Math.sin(phi);\r\n    return [x, y];\r\n}\r\n\r\nfunction xy2polar(x: number, y: number) {\r\n    let r = Math.sqrt(x * x + y * y);\r\n    let phi = Math.atan2(y, x);\r\n    return [r, phi];\r\n}\r\n\r\nfunction rad2deg(rad: number) {\r\n    return ((rad + Math.PI) / (2 * Math.PI)) * 360;\r\n}\r\n\r\nfunction deg2rad(deg: number) {\r\n    return (deg % 360) / 180 * Math.PI;\r\n}\r\n\r\n/*------------------------------------------------------------------------*\\\r\n\r\n  # export\r\n\r\n\\*------------------------------------------------------------------------*/\r\n\r\nexport default SaiStyleColorPicker;"],"sourceRoot":""}